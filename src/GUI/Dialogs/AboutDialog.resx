<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picnERD.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAW
        JQAAFiUBSVIk8AAAA+ZJREFUWEfVl9tTGmcYh/3neteZpldtOu1Mk4vm0JhJmmisUTnI+bAnlKMYBA9j
        ggFBnRQ1IB5RiK5RY5WGhFRJSauJNml70fl1WRBYwWpTpNPfzDMDA+/3Pry7++1S879Oo0iMayISubfV
        TZNYjLO6FXxKxFEnoaorIZJKcMW0gq8t8SzmOBpldHUkpDIpRK41SHoTBVxZpKpTnoRc0Qrj/Q1YfMmy
        mDlUeuZ0JFQqOdzjCXjDqTwenu0sEwVI2lBZCauZwl3vGKbZXwRMHkFw4QVamm9UWMJCYzQ4i7XEHs9q
        hqelsE9egtDLK9Nco62HxaTJL2az0piejWA7/Y5n6xBPkz+DIhWC5pLGq+8nQ9ANCK9bMBIywWrR5xfp
        sDKIRmN4vfcHdotIpV+DppSCZlaNGCmHA3ekjf9MQkfewANWgam4FYvJexid7jokQWNp8RHe/f4nz87u
        GxhoYXMbIccrjwdppxMvKRKdzXUnk9DQ13A/dhOBVWVeYH07gNBcPydB5Bex2xisPGaxv7+PNkYlbM5N
        YndsDDs+X15gq7kJ9oZjDoeavIy+yDl4lupKBBKvpjA5PwCbtbD3220GaNUtgkU7GDXezMxgLxgsEUjW
        XoL95uXyEkriArqmPkZf9Dwn8E1ZgR93Y5iO+mArmkRxOgwavI3F8DYSOVLg+edncef6BWG9WHoRtokP
        0DV75liB1N4yQpNuDLidgkXadFL8uryM31j2WIHkRx/CWHuuUD/oc0Jv/6JUYDMj0C8QeJae5852ackE
        Oi0U2MBwqYDLVSIQ/eQMGGm9cI2MBNV5vkiAuwoOCfyQmgFFiQWFNm6XzL3MSgwN/q3AwpefgWk91Pwg
        Pn8PGMelsgLrL8a4TUYkKDS1UQiOBmE1FW5AdjOJJa+7rED06kXQrbfKNz9IRsLYdT0nYOEF2MQQSFJ4
        thsZAom1n/BsYwehB2GhhFGPWH9PXiBFU1i83QBGfsINyefrhbW7kReY2+wFQTQLCttpApvsNuKr6Ty8
        RNHhyEjMO2y8AKtVgVbcPlnzg/j9fbC5JNDphYUGUofHked4Et3KEivwnf8hLMbCk1FHmxZ+nRyMSvgD
        3ju0XouFhxuIhRN5Hk0IGb4XgLm9MAmvu7tSzXUIeVcR9q8XGPq+LG7nCDInaK60MqHVeox0sxjpOY5l
        DHROQSmv0NiLQ8g1uGuc5Zg7Ehc9CrW8dKOqWDRiNRyysBDFBI9ZNgylWHi5nkoUTUq03xrnMWZoGAdT
        PwgV98ie+8rpR/atAsSVAI+21gMl92cl91H1Iq2XQf6VG4qWKoz9qKhlrf9d83+fmpq/AJM1xRsk3r2x
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>